name: Deploy web3 app to EKS
on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: "v1.29.0" # default is latest stable
        id: install

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        working-directory: src
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: cfdapp4034
          IMAGE_TAG: 1.1
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push cfdappserver image to Amazon ECR
        working-directory: server
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: cfdappserver
          IMAGE_TAG: 1.1
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Create EKS cluster with Terraform
        working-directory: terraform
        run: |
          terraform init
          terraform apply --auto-approve

      - name: Update kube config
        run: aws eks update-kubeconfig --name cfdapp4034-eks-cluster

      - name: Deploy to EKS
        working-directory: kubernetes
        run: |
          kubectl apply -f deployment_cfdappserver.yaml
          kubectl apply -f service_cfdappserver.yaml
          kubectl apply -f deployment_cfdapp4034.yaml
          kubectl apply -f service_cfdapp4034.yaml
