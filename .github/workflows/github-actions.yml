name: Deploy web3 app to GKE
on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: "v1.29.0"

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build, tag, and push docker image to Docker Hub
        working-directory: src
        env:
          REGISTRY: ${{ secrets.DOCKERHUB_USERNAME }}
          REPOSITORY: cfdapp4034
          IMAGE_TAG: 1.1
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push cfdappserver image to Docker Hub
        working-directory: server
        env:
          REGISTRY: ${{ secrets.DOCKERHUB_USERNAME }}
          REPOSITORY: cfdappserver
          IMAGE_TAG: 1.1
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Create GKE cluster with Terraform
        working-directory: terraform
        run: |
          terraform init
          terraform apply --auto-approve

      - name: Get GKE credentials
        run: gcloud container clusters get-credentials myapp-gke-cluster-4034 --region northamerica-northeast2

      - name: Deploy to GKE
        working-directory: kubernetes
        run: |
          kubectl apply -f deployment_cfdappserver.yaml
          kubectl apply -f service_cfdappserver.yaml
          kubectl apply -f deployment_cfdapp4034.yaml
          kubectl apply -f service_cfdapp4034.yaml
          kubectl apply -f deployment_mongodb.yaml
          kubectl apply -f service_mongodb.yaml
          kubectl apply -f pvc.yaml
